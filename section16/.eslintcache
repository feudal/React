[{"C:\\Users\\37378\\Desktop\\figma\\react-en\\section16\\src\\index.js":"1","C:\\Users\\37378\\Desktop\\figma\\react-en\\section16\\src\\App.js":"2","C:\\Users\\37378\\Desktop\\figma\\react-en\\section16\\src\\components\\SimpleInput.js":"3","C:\\Users\\37378\\Desktop\\figma\\react-en\\section16\\src\\components\\BasicForm.js":"4","C:\\Users\\37378\\Desktop\\figma\\react-en\\section16\\src\\hooks\\use-input.js":"5"},{"size":142,"mtime":1616595887000,"results":"6","hashOfConfig":"7"},{"size":231,"mtime":1630730448018,"results":"8","hashOfConfig":"7"},{"size":2684,"mtime":1630730541803,"results":"9","hashOfConfig":"7"},{"size":3764,"mtime":1631103494884,"results":"10","hashOfConfig":"7"},{"size":735,"mtime":1630729953449,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"10coibz",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"C:\\Users\\37378\\Desktop\\figma\\react-en\\section16\\src\\index.js",[],["26","27"],"C:\\Users\\37378\\Desktop\\figma\\react-en\\section16\\src\\App.js",["28"],"import SimpleInput from './components/SimpleInput';\nimport BasicForm from \"./components/BasicForm\";\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <BasicForm/>\n        </div>\n    );\n}\n\nexport default App;\n","C:\\Users\\37378\\Desktop\\figma\\react-en\\section16\\src\\components\\SimpleInput.js",["29"],"import {useState} from \"react\";\nimport useInput from '../hooks/use-input';\n\nconst SimpleInput = (props) => {\n    function validateName(name) {\n        return name.trim() !== '' && name.length > 2;\n    }\n\n    function validateEmail(email) {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    }\n\n    const {\n        value: enteredName,\n        hasError: nameInputHasError,\n        valueChangeHandler: nameInputChangeHandler,\n        valueInputBlurHandler: nameInputBlurHandler,\n        reset: resetNameInput\n    } = useInput(validateName);\n\n    const {\n        value: enteredEmail,\n        hasError: emailInputHasError,\n        valueChangeHandler: emailInputChangeHandler,\n        valueInputBlurHandler: emailInputBlurHandler,\n        reset: resetEmailInput\n    } = useInput(validateEmail);\n\n    let formIsValid = false;\n    if (!nameInputHasError && !emailInputHasError) {\n        formIsValid = true;\n    }\n\n    const formSubmissionHandler = event => {\n        event.preventDefault();\n        if (nameInputHasError && emailInputHasError) {\n            return;\n        }\n        console.log(enteredName);\n        console.log(enteredEmail);\n        resetNameInput();\n        resetEmailInput();\n    }\n\n    const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n    const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n\n    return (\n        <form onSubmit={formSubmissionHandler}>\n            <div className={nameInputClasses}>\n                <label htmlFor='name'>Your Name</label>\n                <input\n                    onBlur={nameInputBlurHandler}\n                    type='text'\n                    id='name'\n                    value={enteredName}\n                    onChange={nameInputChangeHandler}/>\n            </div>\n            {nameInputHasError && <p className='error-text'>Name must have minimum 3 letters!</p>}\n\n            <div className={emailInputClasses}>\n                <label htmlFor='email'>Your Email</label>\n                <input\n                    onBlur={emailInputBlurHandler}\n                    type='email'\n                    id='email'\n                    value={enteredEmail}\n                    onChange={emailInputChangeHandler}/>\n            </div>\n            {emailInputHasError && <p className='error-text'>Invalid format of email!</p>}\n            <div className=\"form-actions\">\n                <button disabled={!formIsValid}>Submit</button>\n            </div>\n        </form>\n    );\n};\n\nexport default SimpleInput;\n","C:\\Users\\37378\\Desktop\\figma\\react-en\\section16\\src\\components\\BasicForm.js",[],"C:\\Users\\37378\\Desktop\\figma\\react-en\\section16\\src\\hooks\\use-input.js",["30"],"import React, {useState} from 'react';\r\n\r\nconst useInput = (validateValue) => {\r\n    const [enteredValue, setEnteredValue] = useState('');\r\n    const [isTouched, setIsTouched] = useState(false);\r\n\r\n    const valueIsValid = validateValue(enteredValue);\r\n    const hasError = !valueIsValid && isTouched;\r\n\r\n    const valueChangeHandler = event => {\r\n        setEnteredValue(event.target.value);\r\n    }\r\n\r\n    const valueInputBlurHandler = () => {\r\n        setIsTouched(true);\r\n    }\r\n    const reset = () => {\r\n        setEnteredValue('');\r\n        setIsTouched(false);\r\n    }\r\n\r\n    return {\r\n        value: enteredValue, valueIsValid, hasError, valueChangeHandler, valueInputBlurHandler, reset\r\n    };\r\n};\r\n\r\nexport default useInput;\r\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":19},{"ruleId":"35","severity":1,"message":"39","line":1,"column":9,"nodeType":"37","messageId":"38","endLine":1,"endColumn":17},{"ruleId":"35","severity":1,"message":"40","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":13},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]